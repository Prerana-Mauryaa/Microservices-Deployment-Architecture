pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_IMAGE_TAG', defaultValue: 'latest', description: 'Tag for Docker image')
    }

    environment {
        DOCKER_REGISTRY = 'docker.io/your-repo'
        DOCKER_IMAGE_NAME = 'prer' //change later
        REGISTRY_CREDENTIAL = '' //change later
        HELM_CHART_NAME = 'business-service'
        NAMESPACE= 'business-service'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Clone Repo') {
            steps {
                checkout scm: [
                    $class: 'GitSCM',
                    branches: [[name: '*/master']], 
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [
                        [$class: 'CleanBeforeCheckout']
                    ],
                    userRemoteConfigs: [
                        [credentialsId: '90f6337a-2974-483f-9adb-f0f9d46198b7', url: 'git@github.com:Prerana-Mauryaa/Deployment-of-Two-Tier-App.git']
                    ]
                ]
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    echo 'Building and pushing the Docker image to Docker Hub'
                    dockerImage = docker.build("${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}")
                    docker.withRegistry('', REGISTRY_CREDENTIAL) {
                        dockerImage.push()
                    }
                }
            }
        }


        stage('Install Helm Chart') {
            steps {
                script {
                    sh "helm upgrade --install business-service  ./helm-charts/${HELM_CHART_NAME} \
                        --namespace ${NAMESPACE} \
                        --set image.tag=${params.DOCKER_IMAGE_TAG}"
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clean workspace after execution
        }
    }
}